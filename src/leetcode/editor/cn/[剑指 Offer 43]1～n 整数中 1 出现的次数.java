//输入一个整数 n ，求1～n这n个整数的十进制表示中1出现的次数。 
//
// 例如，输入12，1～12这些整数中包含1 的数字有1、10、11和12，1一共出现了5次。 
//
// 
//
// 示例 1： 
//
// 
//输入：n = 12
//输出：5
// 
//
// 示例 2： 
//
// 
//输入：n = 13
//输出：6 
//
// 
//
// 限制： 
//
// 
// 1 <= n < 2^31 
// 
//
// 注意：本题与主站 233 题相同：https://leetcode-cn.com/problems/number-of-digit-one/ 
// Related Topics 递归 数学 动态规划 👍 276 👎 0


//leetcode submit region begin(Prohibit modification and deletion)
class SolutionOffer32 {
    /**
     *《编程之美》上这样说:
     *  设N = abcde ,其中abcde分别为十进制中各位上的数字。
     *  如果要计算百位上1出现的次数，它要受到3方面的影响：百位上的数字，百位以下（低位）的数字，百位以上（高位）的数字。
     *
     *  如果百位上数字为0，百位上可能出现1的次数由更高位决定。比如：12013，
     *  则可以知道百位出现1的情况可能是：100~199，1100~1199,2100~2199，，...，11100~11199，一共1200个。
     *  可以看出是由更高位数字（12）决定，并且等于更高位数字（12）乘以 当前位数（100）。注意：高位数字不包括当前位
     *
     *  如果百位上数字为1，百位上可能出现1的次数不仅受更高位影响还受低位影响。比如：12113，
     *  则可以知道百位受高位影响出现的情况是：100~199，1100~1199,2100~2199，，....，11100~11199，一共1200个
     *  和上面情况一样，并且等于更高位数字（12）乘以 当前位数（100）。
     *  但同时它还受低位影响，百位出现1的情况是：12100~12113,一共14个，等于低位数字（13）+1。
     *  注意：低位数字不包括当前数字
     *
     *  如果百位上数字大于1（2~9），则百位上出现1的情况仅由更高位决定，比如12213，
     *  则百位出现1的情况是：100~199,1100~1199，2100~2199，...，11100~11199,12100~12199,一共有1300个，
     *  并且等于更高位数字+1（12+1）乘以当前位数（100）
     */
    public int countDigitOne(int n) {
        long ret = 0, num = n;
        for (int i = 1; num > 0; i *= 10) {
            if (num % 10 == 0) {
                ret += (num / 10) * i;
            } else if (num % 10 == 1) {
                ret += (num / 10) * i + (n % i + 1);
            } else { // num % 10 > 1 (2~9)
                ret += (num / 10 + 1) * i;
            }
            num = num / 10;
        }
        return (int)ret;
    }
}
//leetcode submit region end(Prohibit modification and deletion)
