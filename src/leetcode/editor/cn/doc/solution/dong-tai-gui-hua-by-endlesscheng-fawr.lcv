定义 $f[i]$ 表示行驶到 $i$ 时的最大盈利。考虑状态转移，一方面，我们可以不接终点为 $i$ 的乘客，这样有 $f[i]=f[i-1]$；另一方面，我们可以接所有终点为 $i$ 的乘客中收益最大的，这样有 $f[i] = \max (f[start]+i-start+tip)$，二者取最大值。

最终答案为 $f[n]$。

相似题目：

- [1235. 规划兼职工作](https://leetcode-cn.com/problems/maximum-profit-in-job-scheduling/)

* go

```go
func maxTaxiEarnings(n int, rides [][]int) int64 {
	f := make([]int, n+1)
	groups := make([][][2]int, n+1)
	for _, r := range rides {
		start, end, tip := r[0], r[1], r[2]
		groups[end] = append(groups[end], [2]int{start, tip}) // 按终点位置分组
	}
	for end := 1; end <= n; end++ { // 从前往后枚举终点
		f[end] = f[end-1]
		for _, r := range groups[end] {
			start, tip := r[0], r[1]
			f[end] = max(f[end], f[start]+end-start+tip) // 接所有终点为 end 的乘客中收益最大的
		}
	}
	return int64(f[n])
}

func max(a, b int) int { if b > a { return b }; return a }
```

