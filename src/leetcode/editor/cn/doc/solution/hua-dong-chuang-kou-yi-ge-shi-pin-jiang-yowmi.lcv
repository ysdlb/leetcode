统计窗口内 $0$ 的个数 $\textit{cnt}_0$，则问题转换成在 $\textit{cnt}_0\le k$ 的前提下，窗口大小的最大值。

这可以用同向双指针实现。如何移动指针？具体见视频讲解[【基础算法精讲 01】](https://www.bilibili.com/video/BV1hd4y1r7Gq/)（APP 用户需要分享到 wx 打开）。

* [sol1-Python3]

```py
class Solution:
    def longestOnes(self, nums: List[int], k: int) -> int:
        ans = left = cnt0 = 0
        for right, x in enumerate(nums):
            cnt0 += 1 - x  # 0 变成 1，用来统计 cnt0
            while cnt0 > k:
                cnt0 -= 1 - nums[left]
                left += 1
            ans = max(ans, right - left + 1)
        return ans
```

* [sol1-Java]

```java
class Solution {
    public int longestOnes(int[] nums, int k) {
        int ans = 0, left = 0, cnt0 = 0, n = nums.length;
        for (int right = 0; right < n; ++right) {
            cnt0 += 1 - nums[right]; // 0 变成 1，用来统计 cnt0
            while (cnt0 > k)
                cnt0 -= 1 - nums[left++];
            ans = Math.max(ans, right - left + 1);
        }
        return ans;
    }
}
```

* [sol1-C++]

```cpp
class Solution {
public:
    int longestOnes(vector<int> &nums, int k) {
        int ans = 0, left = 0, cnt0 = 0, n = nums.size();
        for (int right = 0; right < n; ++right) {
            cnt0 += 1 - nums[right]; // 0 变成 1，用来统计 cnt0
            while (cnt0 > k)
                cnt0 -= 1 - nums[left++];
            ans = max(ans, right - left + 1);
        }
        return ans;
    }
};
```

* [sol1-Go]

```go
func longestOnes(nums []int, k int) (ans int) {
    left, cnt0 := 0, 0
    for right, x := range nums {
        cnt0 += 1 - x
        for cnt0 > k {
            cnt0 -= 1 - nums[left]
            left++
        }
        ans = max(ans, right-left+1)
    }
    return
}

func max(a, b int) int { if a < b { return b }; return a }
```

### 复杂度分析

- 时间复杂度：$O(n)$，其中 $n$ 为 $\textit{nums}$ 的长度。证明方式见视频讲解。
- 空间复杂度：$O(1)$，仅用到若干额外变量。

### 相似题目

- [3. 无重复字符的最长子串](https://leetcode.cn/problems/longest-substring-without-repeating-characters/)，[题解](https://leetcode.cn/problems/longest-substring-without-repeating-characters/solutions/1959540/xia-biao-zong-suan-cuo-qing-kan-zhe-by-e-iaks/)
- [209. 长度最小的子数组](https://leetcode.cn/problems/minimum-size-subarray-sum/)，[题解](https://leetcode.cn/problems/minimum-size-subarray-sum/solutions/1959532/biao-ti-xia-biao-zong-suan-cuo-qing-kan-k81nh/)
- [713. 乘积小于 K 的子数组](https://leetcode.cn/problems/subarray-product-less-than-k/)，[题解](https://leetcode.cn/problems/subarray-product-less-than-k/solutions/1959538/xia-biao-zong-suan-cuo-qing-kan-zhe-by-e-jebq/)
- [1234. 替换子串得到平衡字符串](https://leetcode.cn/problems/replace-the-substring-for-balanced-string/)，[题解](https://leetcode.cn/problems/replace-the-substring-for-balanced-string/solution/tong-xiang-shuang-zhi-zhen-hua-dong-chua-z7tu/)

